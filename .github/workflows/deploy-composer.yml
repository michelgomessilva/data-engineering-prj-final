name: Build & Deploy DAG with Docker via Artifact Registry

on:
  push:
    branches: [develop]

env:
  GCP_PROJECT_ID: data-eng-dev-437916
  COMPOSER_BUCKET: europe-west1-airflow-196fdba9-bucket
  CODE_PATH: grupo-2
  REGION: europe-west1
  REPO_NAME: pipelines
  DOCKER_IMAGE_NAME: grupo-2-pipeline-app
  DOCKER_IMAGE_TAG: latest
  DOCKERHUB_REPO: michelgomessilvax/grupo-2-pipeline-app
  DAG_PATH: dags/pipeline.py

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    outputs:
      short_sha: ${{ steps.export.outputs.short_sha }}
    steps:
      - uses: actions/checkout@v4

      - name: Save gcp-key.json
        run: echo '${{ secrets.GCP_SA_KEY_JSON }}' > gcp-key.json

      - name: Login no DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Gerar metadados da imagem (tags e labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.DOCKERHUB_REPO }}
          tags: |
            type=sha,format=short
            type=ref,event=branch
            type=raw,value=latest

      - name: Build & Push
        id: build
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Substitui IMAGE_URI no DAG
        id: export
        run: |
          SHORT_SHA=$(echo "${GITHUB_SHA}" | cut -c1-7)
          IMG_REF="${{ env.DOCKERHUB_REPO }}:sha-${SHORT_SHA}"
          echo "Substituindo na DAG: $IMG_REF"
          sed -i "s|__IMAGE_PLACEHOLDER__|$IMG_REF|g" ${{ env.DAG_PATH }}
          echo "image_ref=$IMG_REF" >> "$GITHUB_OUTPUT"

      - name: Verifica substituição
        run: grep IMAGE_URI ${{ env.DAG_PATH }}

      - name: Upload DAG modificada como artifact
        uses: actions/upload-artifact@v4
        with:
          name: dag-pipeline
          path: ${{ env.DAG_PATH }}

  upload-dag:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - uses: actions/checkout@v4

      - name: Baixa DAG modificada
        uses: actions/download-artifact@v4
        with:
          name: dag-pipeline
          path: dags/

      - name: Autentica no GCP
        uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY_JSON }}'

      - name: Setup gcloud
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.GCP_PROJECT_ID }}
          install_components: gsutil

      - name: Verifica DAG final (debug)
        run: cat dags/pipeline.py

      - name: Upload da DAG para o Composer
        run: |
          gsutil cp dags/pipeline.py gs://${{ env.COMPOSER_BUCKET }}/dags/grupo_2/
